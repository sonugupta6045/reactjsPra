import { createSlice, nanoid } from "@reduxjs/toolkit";

const initialState = {
    todos: [{id:1, text: "Learn Redux Toolkit"}],
}

export const todoSlice = createSlice({
    name:'todo',
    initialState,
    reducers: {
        addTodo:(state,action)=>{
            const todo = {
                id:nanoid(), // nanoid is used to generate the uqine id.
                text:action.payload
            }
            state.todos.push(todo)
        },
        removeTodo:(state,action)=>{
            state.todos = state.todos.filter((todo)=>{
                id !== action.payload
            })
        },
        updateTodo:(sate, action) =>{
            const {id,text} =action.payload;
            const todo = state.todos.find((todo)=>todo.id === id)
            if(!todo) return;
            todo.text = text;
        }
    }
})


export const {addTodo,removeTodo,updateTodo} = todoSlice.actions;

export default todoSlice.reducer;
// The above code defines a Redux slice for managing todos. It includes actions to add, remove, and update todos, with each todo having a unique ID generated by nanoid. The initial state contains one todo item. The slice is exported for use in the Redux store.